Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig, ax = plt.subplots(1, 2, sharex=True, sharey=False, figsize=(12, 5))


def activations_gradients(x, y, layers, g, dg_dz, dL_dyhat):

    activations = [x]
    for l in range(1, layers):
        activations.append(g(activations[-1]))
    ...

a1 = sigmoid(x)
a2 = sigmoid(a1)
a3 = sigmoid(a2)
a4 = sigmoid(a3)

dL_dZ4 = a4 - y
dL_dW4 = dL_dZ4 * a3
dL_dZ3 = dL_dZ4 * dsigmoid_dz(a2)
dL_dW3 = dL_dZ3 * a2
dL_dZ2 = dL_dZ3 * dsigmoid_dz(a1)
dL_dW2 = dL_dZ2 * a1
dL_dZ1 = dL_dZ2 * dsigmoid_dz(x)
dL_dW1 = dL_dZ1 * x


    

x = np.linspace(-7, 7, 100)

ax[0].plot(x, a1, label="Layer 1")
ax[0].plot(x, a2, label="Layer 2")
ax[0].plot(x, a3, label="Layer 3")
ax[0].plot(x, a4, label="Layer 4")
ax[0].legend()
ax[0].set_xlabel("x")
ax[0].set_title("Layer Activations")

ax[1].plot(x, dL_dW1, label="Layer 1")
ax[1].plot(x, dL_dW2, label="Layer 2")
ax[1].plot(x, dL_dW3, label="Layer 3")
ax[1].plot(x, dL_dW4, label="Layer 4")
ax[1].legend()
ax[1].set_xlabel("x")
ax[1].set_title(
    r"Layer Loss-Gradients ($\partial \mathcal{L} / \partial W^{[l]}$) if $y = 0$"
)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn [2], line 11[0m
[1;32m      8[0m         activations[38;5;241m.[39mappend(g(activations[[38;5;241m-[39m[38;5;241m1[39m]))
[1;32m      9[0m     [38;5;241m.[39m[38;5;241m.[39m[38;5;241m.[39m
[0;32m---> 11[0m a1 [38;5;241m=[39m sigmoid([43mx[49m)
[1;32m     12[0m a2 [38;5;241m=[39m sigmoid(a1)
[1;32m     13[0m a3 [38;5;241m=[39m sigmoid(a2)

[0;31mNameError[0m: name 'x' is not defined
NameError: name 'x' is not defined

